<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="whang.travel.domain.accommodation.mybatis.AccommodationMapper">


    <resultMap id="arrayHandler" type="Accommodation">
        <result property="accommodationId" column="accommodation_id"/>
        <result property="name" column="name"/>
        <result property="location" column="location"/>
        <result property="category" column="category"/>
        <result property="introduction" column="introduction"/>
        <result property="service" column="service" typeHandler="org.apache.ibatis.type.ArrayTypeHandler"/>
        <result property="information" column="information"/>
        <result property="seller" column="seller"/>
    </resultMap>


    <insert id="save" useGeneratedKeys="true" keyProperty="accommodationId">
        insert into accommodation (name, location, category, introduction, service, information, seller, region)
        values (#{name}, #{location}, #{category}, #{introduction}, #{service}, #{information}, #{seller}, #{region})
    </insert>

    <update id="update">
        update accommodation set name=#{updateAccommo.name},
        location=#{updateAccommo.location},
        category=#{updateAccommo.category},
        introduction=#{updateAccommo.introduction},
        service=#{updateAccommo.service},
        information=#{updateAccommo.information},
        seller=#{updateAccommo.seller}
        where accommodation_id=#{accommoId}
    </update>

    <!-- 리스트에서 카드를 클릭하면 상세 페이지로 넘어갈 때 사용될 것. -->
    <select id="findAccommoById" resultMap="arrayHandler">
        select accommodation_id, name, location, category, introduction, service, information, seller, region
        from accommodation
        where accommodation_id=#{accommoId}
    </select>

    <!-- 사용자가 지역, 날짜, 인원을 넣고 검색을 눌렀을 때 숙소 리스트 뽑아줄 때 사용. -->
    <select id="findAccommoList" resultType="Accommodation">
        <!-- 지금 이 sql문은 방 검색에 알맞는 경우임 -->
        <!-- DISTINCT만 없애주면 기간에 이용가능한 방들이 나옴 -->
        <!-- 숙소만 딱 하나 나오게 할려면 다른 방법이 필요함. -->
        select DISTINCT accommodation_id, a.name, location, category, introduction, service, information, a.seller, a.region
        from accommodation a
        join room r on a.accommodation_id = r.accommodation
        left join reservation s on r.room_id = s.room
        where
        a.region=#{region}
        and r.max_personnel &lt;= #{personnel}
        and (s.room is null or ((#{startDate} &gt;= s.check_in and #{startDate} &gt;= s.check_out)
        or (#{endDate} &lt;= s.check_in and #{endDate} &lt;= s.check_out)))
    </select>

    <select id="findRoomList" resultType="Room">
        select DISTINCT room_id, r.name, r.personnel, max_personnel, r.accommodation, r.room_type, r.base_price, r.check_in, r.check_out
        from room r
        join accommodation a on a.accommodation_id = r.accommodation
        left join reservation s on r.room_id = s.room
        where
        r.accommodation = #{accommoId}
        and r.max_personnel &lt;= #{searchCond.personnel}
        and (s.room is null or ((#{searchCond.startDate} &gt;= s.check_in and #{searchCond.startDate} &gt;= s.check_out)
        or (#{searchCond.endDate} &lt;= s.check_in and #{searchCond.endDate} &lt;= s.check_out)))
    </select>

    <!--숙소 삭제-->
    <delete id="delete">
        delete
        from accommodation
        where accommodation_id=#{accommoId}
    </delete>

</mapper>

